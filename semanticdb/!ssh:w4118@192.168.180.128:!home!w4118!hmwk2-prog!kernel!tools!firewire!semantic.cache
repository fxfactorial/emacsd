;; Object firewire/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "firewire/"
  :tables
  (list
    (semanticdb-table "list.h"
      :major-mode 'c-mode
      :tags 
        '( ("list" type
               (:members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [16 41])
                    ("prev" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [16 41]))                  
                :type "struct")
                nil [1 44])
            ("list_init" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [75 93]))                  
                :type "void")
                nil [46 137])
            ("list_empty" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [168 186]))                  
                :type "int")
                nil [139 218])
            ("list_insert" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("link" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [251 269])
                    ("new_link" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [270 292]))                  
                :type "void")
                nil [220 420])
            ("list_append" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [453 471])
                    ("new_link" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [472 494]))                  
                :type "void")
                nil [422 543])
            ("list_prepend" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [577 595])
                    ("new_link" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [596 618]))                  
                :type "void")
                nil [545 658])
            ("list_remove" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("link" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [691 709]))                  
                :type "void")
                nil [660 777])
            ("list_entry" variable (:constant-flag t) nil [787 797])
            ("list_head" variable (:constant-flag t) nil [895 904])
            ("list_tail" variable (:constant-flag t) nil [977 986])
            ("list_next" variable (:constant-flag t) nil [1059 1068])
            ("list_for_each_entry" variable (:constant-flag t) nil [1151 1170]))          
      :file "list.h"
      :pointmax 1319
      :fsize 1318
      :lastmodtime '(21569 50790)
      :unmatched-syntax nil
      :lexical-table 
        '(("list_head" (spp-arg-list ("list" "type" "member") 904 . 924) . ((symbol "list_entry" 929 . 939) (semantic-list "((list)->next, type, member)" 939 . 967)))
          ("list_next" (spp-arg-list ("elm" "member") 1068 . 1081) . ((symbol "list_entry" 1089 . 1099) (semantic-list "((elm)->member.next, typeof(*elm), member)" 1099 . 1141)))
          ("list_for_each_entry" (spp-arg-list ("pos" "list" "member") 1170 . 1189) . ((FOR "for" 1195 . 1198) (semantic-list "(pos = list_head(list, typeof(*pos), member);	\\
	     &pos->member != (list);				\\
	     pos = list_next(pos, member))" 1199 . 1317)))
          ("list_tail" (spp-arg-list ("list" "type" "member") 986 . 1006) . ((symbol "list_entry" 1011 . 1021) (semantic-list "((list)->prev, type, member)" 1021 . 1049)))
          ("list_entry" (spp-arg-list ("link" "type" "member") 797 . 817) . ((semantic-list "((type *)((char *)(link)-(unsigned long)(&((type *)0)->member)))" 821 . 885)))
          )
))
  :file "!ssh:w4118@192.168.180.128:!home!w4118!hmwk2-prog!kernel!tools!firewire!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
