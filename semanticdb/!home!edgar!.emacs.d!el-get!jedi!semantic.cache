;; Object jedi/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "jedi/"
  :tables
  (list
    (semanticdb-table "jediepcserver.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Jedi EPC server.

Copyright (C) 2012 Takafumi Arakaki

Author: Takafumi Arakaki <aka.tkf at gmail.com>

This file is NOT part of GNU Emacs.

Jedi EPC server is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Jedi EPC server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jedi EPC server.
If not, see <http://www.gnu.org/licenses/>.

\"\"\"" code nil nil [24 793])
            ("os" include nil nil [795 804])
            ("sys" include nil nil [805 815])
            ("re" include nil nil [816 825])
            ("itertools" include nil nil [826 842])
            ("logging" include nil nil [843 857])
            ("site" include nil nil [858 869])
            ("jedi" variable nil nil [871 882])
            ("PY3" variable nil nil [909 941])
            ("NEED_ENCODE" code nil nil [942 963])
            ("jedi_script" function (:arguments 
              ( ("source" variable nil (reparse-symbol function_parameters) [982 988])
                ("line" variable nil (reparse-symbol function_parameters) [990 994])
                ("column" variable nil (reparse-symbol function_parameters) [996 1002])
                ("source_path" variable nil (reparse-symbol function_parameters) [1004 1015]))              ) nil [966 1208])
            ("candidate_symbol" function
               (:documentation "
    Return a character representing completion type.

    :type comp: jedi.api.Completion
    :arg  comp: A completion object returned by `jedi.Script.complete`.

    "
                :arguments 
                  ( ("comp" variable nil (reparse-symbol function_parameters) [1231 1235]))                  )
                nil [1210 1521])
            ("candidates_description" function
               (:documentation "
    Return `comp.description` in an appropriate format.

    * Avoid return a string 'None'.
    * Strip off all newlines. This is required for using
      `comp.description` as candidate summary.

    "
                :arguments 
                  ( ("comp" variable nil (reparse-symbol function_parameters) [1550 1554]))                  )
                nil [1523 1876])
            ("_WHITESPACES_RE" variable nil nil [1876 1912])
            ("complete" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [1928 1933]))              ) nil [1915 2204])
            ("get_in_function_call" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [2231 2236]))              ) nil [2206 2657])
            ("_goto" function
               (:documentation "
    Helper function for `goto` and `related_names`.

    :arg  method: `jedi.Script.goto` or `jedi.Script.related_names`
    :arg    args: Arguments to `jedi_script`

    "
                :arguments 
                  ( ("method" variable nil (reparse-symbol function_parameters) [2669 2675])
                    ("args" variable nil (reparse-symbol function_parameters) [2677 2682]))                  )
                nil [2659 3344])
            ("goto" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [3355 3360]))              ) nil [3346 3405])
            ("related_names" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [3425 3430]))              ) nil [3407 3484])
            ("definition_to_dict" function (:arguments 
              ( ("d" variable nil (reparse-symbol function_parameters) [3509 3510]))              ) nil [3486 3843])
            ("get_definition" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [3864 3869]))              ) nil [3845 3980])
            ("get_names_recursively" function
               (:documentation "
    Fetch interesting defined names in sub-scopes under `definition`.

    :type names: jedi.api_classes.Definition

    "
                :arguments 
                  ( ("definition" variable nil (reparse-symbol function_parameters) [4008 4018])
                    ("parent" variable nil (reparse-symbol function_parameters) [4020 4026]))                  )
                nil [3982 4523])
            ("defined_names" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [4543 4548]))              ) nil [4525 4626])
            ("get_module_version" function (:arguments 
              ( ("module" variable nil (reparse-symbol function_parameters) [4651 4657]))              ) nil [4628 5087])
            ("get_jedi_version" function nil nil [5089 5340])
            ("jedi_epc_server" function (:arguments 
              ( ("address" variable nil (reparse-symbol function_parameters) [5362 5369])
                ("port" variable nil (reparse-symbol function_parameters) [5383 5387])
                ("port_file" variable nil (reparse-symbol function_parameters) [5391 5400])
                ("sys_path" variable nil (reparse-symbol function_parameters) [5433 5441])
                ("virtual_env" variable nil (reparse-symbol function_parameters) [5446 5457])
                ("debugger" variable nil (reparse-symbol function_parameters) [5482 5490])
                ("log" variable nil (reparse-symbol function_parameters) [5497 5500])
                ("log_level" variable nil (reparse-symbol function_parameters) [5507 5516])
                ("log_traceback" variable nil (reparse-symbol function_parameters) [5543 5556]))              ) nil [5342 7527])
            ("import_jedi" function nil nil [7529 7600])
            ("add_virtualenv_path" function
               (:documentation "Add virtualenv's site-packages to `sys.path`."
                :arguments 
                  ( ("venv" variable nil (reparse-symbol function_parameters) [7626 7630]))                  )
                nil [7602 7935])
            ("main" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [7946 7950]))              ) nil [7937 9405])
            ("if" code nil nil [9407 9445]))          
      :file "jediepcserver.py"
      :pointmax 9445
      :fsize 9444
      :lastmodtime '(21542 61213 571787 675000)
      :unmatched-syntax '((thing 1803 . 1809) (thing 1841 . 1843) (thing 1868 . 1872)))
    (semanticdb-table "jedi.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [980 993])
            ("ring" include nil nil [995 1010])
            ("epc" include nil nil [1012 1026])
            ("auto-complete" include nil nil [1027 1051])
            ("python-environment" include nil nil [1052 1081])
            ("declare-function" code nil nil [1082 1123])
            ("jedi" customgroup (:user-visible-flag t) nil [1126 1216])
            ("jedi:version" variable
               (:constant-flag t
                :default-value "0.2.0alpha2")
                nil [1218 1255])
            ("jedi:source-dir" variable (:default-value (if load-file-name (file-name-directory load-file-name) default-directory)) nil [1257 1410])
            ("jedi:epc" variable nil nil [1412 1433])
            ("make-variable-buffer-local" code nil nil [1434 1472])
            ("jedi:server-script" variable (:default-value (convert-standard-filename (expand-file-name "jediepcserver.py" jedi:source-dir))) nil [1474 1651])
            ("jedi:environment-root" variable nil nil [1684 2022])
            ("jedi:environment-virtualenv" variable nil nil [2024 2292])
            ("jedi:-env-server-command" function nil nil [2294 2562])
            ("jedi:server-command" variable (:default-value (or (jedi:-env-server-command) (list "python" jedi:server-script))) nil [2564 3939])
            ("jedi:server-args" variable nil nil [3941 5800])
            ("jedi:complete-on-dot" variable nil nil [5802 6024])
            ("jedi:tooltip-method" variable (:default-value (quote (pos-tip popup))) nil [6026 6310])
            ("jedi:get-in-function-call-timeout" variable (:default-value 3000) nil [6312 6472])
            ("jedi:get-in-function-call-delay" variable (:default-value 1000) nil [6474 6622])
            ("jedi:goto-definition-config" variable (:default-value (quote ((nil nil nil) (t nil nil) (nil definition nil) (t definition nil) (nil nil t) (t nil t) (nil definition t) (t definition t)))) nil [6624 8035])
            ("jedi:doc-mode" variable (:default-value (quote rst-mode)) nil [8037 8132])
            ("jedi:doc-hook" variable (:default-value (quote (view-mode))) nil [8134 8251])
            ("jedi:doc-display-buffer" variable (:default-value (quote display-buffer)) nil [8253 8379])
            ("jedi:install-imenu" variable nil nil [8381 8584])
            ("jedi:imenu-create-index-function" variable (:default-value (quote jedi:create-nested-imenu-index)) nil [8586 8921])
            ("make-obsolete-variable" code nil nil [8923 8976])
            ("jedi:setup-keys" variable nil nil [8977 10911])
            ("jedi:key-complete" variable (:default-value (kbd "<C-tab>")) nil [10913 11014])
            ("jedi:key-goto-definition" variable (:default-value (kbd "C-.")) nil [11016 11127])
            ("jedi:key-show-doc" variable (:default-value (kbd "C-c d")) nil [11129 11228])
            ("jedi:key-related-names" variable (:default-value (kbd "C-c r")) nil [11230 11377])
            ("jedi:key-goto-definition-pop-marker" variable (:default-value (kbd "C-,")) nil [11379 11512])
            ("jedi:use-shortcuts" variable nil nil [11514 11694])
            ("jedi:import-python-el-settings" variable (:default-value t) nil [11696 11814])
            ("jedi:goto-definition-marker-ring-length" variable (:default-value 16) nil [11816 11958])
            ("jedi:get-in-function-call--d" variable nil nil [11986 12097])
            ("jedi:defined-names--singleton-d" variable nil nil [12099 12206])
            ("jedi-mode-map" variable (:default-value (make-sparse-keymap)) nil [12225 12268])
            ("jedi:handle-post-command" function nil nil [12270 12345])
            ("define-minor-mode" code nil nil [12347 13495])
            ("let" code nil nil [13569 14184])
            ("when" code nil nil [14186 14766])
            ("jedi:epc--live-p" function (:arguments ("mngr")) nil [14785 15147])
            ("jedi:-with-run-on-error" function (:arguments ("body" "run-on-error")) nil [15149 15409])
            ("jedi:epc--start-epc" function (:arguments ("server-prog" "server-args")) nil [15411 16217])
            ("jedi:server-pool--table" variable (:default-value (make-hash-table :test (quote equal))) nil [16238 16361])
            ("jedi:server-pool--start" function (:arguments ("command")) nil [16363 16850])
            ("jedi:-get-servers-in-use" function nil nil [16852 17181])
            ("jedi:server-pool--gc-timer" variable nil nil [17183 17222])
            ("jedi:server-pool--gc" function nil nil [17224 17659])
            ("jedi:server-pool--gc-when-idle" function nil nil [17661 17881])
            ("jedi:start-server" function nil nil [17908 18144])
            ("jedi:stop-server" function (:user-visible-flag t) nil [18146 18677])
            ("jedi:get-epc" function nil nil [18679 18776])
            ("jedi:start-dedicated-server" function
               (:user-visible-flag t
                :arguments ("command"))
                nil [18793 20117])
            ("jedi:-buffer-file-name" function nil nil [20119 20339])
            ("jedi:call-deferred" function (:arguments ("method-name")) nil [20341 20829])
            ("jedi:complete-reply" variable nil nil [20849 20924])
            ("jedi:complete-request-point" variable nil nil [20926 21087])
            ("jedi:complete-request" function nil nil [21089 21407])
            ("jedi:complete" function
               (:user-visible-flag t
                :arguments ("expand"))
                nil [21424 21723])
            ("jedi:dot-complete" function (:user-visible-flag t) nil [21818 22140])
            ("jedi:ac-direct-matches" function nil nil [22159 22490])
            ("jedi:ac-direct-prefix" function nil nil [22492 22640])
            ("ac-define-source" code nil nil [22681 22846])
            ("jedi:ac-setup" function (:user-visible-flag t) nil [22863 23365])
            ("jedi:highlight-function-argument" variable
               (:default-value (quote ((t (:inherit bold))))
                :type "face")
                nil [23412 23564])
            ("jedi:get-in-function-call--construct-call-signature" function (:arguments ("params" "index" "call_name")) nil [23566 23934])
            ("jedi:get-in-function-call--tooltip-show" function (:arguments ("args")) nil [23936 24126])
            ("jedi:get-in-function-call" function (:user-visible-flag t) nil [24128 24334])
            ("jedi:get-in-function-call-when-idle" function nil nil [24336 25104])
            ("jedi:tooltip-show" function (:arguments ("string")) nil [25106 25529])
            ("jedi:string-fill-paragraph" function (:arguments ("string" "justify")) nil [25531 25729])
            ("jedi:goto-definition--index" variable nil nil [25743 25783])
            ("jedi:goto-definition--cache" variable nil nil [25784 25824])
            ("jedi:goto-definition--marker-ring" variable (:default-value (make-ring jedi:goto-definition-marker-ring-length)) nil [25825 25987])
            ("jedi:goto-definition" function
               (:user-visible-flag t
                :arguments ("other-window" "deftype" "use-cache" "index"))
                nil [25989 27740])
            ("jedi:goto-definition-push-marker" function nil nil [27742 27899])
            ("jedi:goto-definition-pop-marker" function (:user-visible-flag t) nil [27901 28455])
            ("jedi:goto-definition-next" function
               (:user-visible-flag t
                :arguments ("other-window"))
                nil [28457 28804])
            ("jedi:goto-definition--callback" function (:arguments ("reply" "other-window")) nil [28806 29016])
            ("jedi:goto--line-column" function (:arguments ("line" "column")) nil [29018 29205])
            ("jedi:goto-definition--nth" function (:arguments ("other-window" "try-next")) nil [29207 30331])
            ("jedi:goto-definition--notify-alternatives" function (:arguments ("len" "n")) nil [30333 30838])
            ("jedi:get-full-name-deferred" function nil nil [30857 31204])
            ("jedi:get-full-name-sync" function (:arguments ("timeout")) nil [31206 31354])
            ("jedi:related-names--source" function (:arguments ("name" "candidates")) nil [31377 31518])
            ("jedi:related-names--to-file-line" function (:arguments ("reply")) nil [31520 31800])
            ("jedi:related-names--helm" function (:arguments ("helm")) nil [31802 32547])
            ("helm-jedi-related-names" function (:user-visible-flag t) nil [32564 32719])
            ("anything-jedi-related-names" function (:user-visible-flag t) nil [32736 32903])
            ("jedi:doc-buffer-name" variable (:default-value "*jedi:doc*") nil [32943 32985])
            ("jedi:show-doc" function (:user-visible-flag t) nil [32987 34248])
            ("jedi:defined-names--cache" variable nil nil [34279 34317])
            ("make-variable-buffer-local" code nil nil [34318 34373])
            ("jedi:defined-names-deferred" function nil nil [34375 34667])
            ("jedi:defined-names--singleton-deferred" function nil nil [34669 35029])
            ("jedi:defined-names--sync" function nil nil [35031 35202])
            ("jedi:after-change-handler" function (:arguments ("_")) nil [35204 35344])
            ("jedi:imenu-make-marker" function (:arguments ("def")) nil [35346 35545])
            ("jedi:create-nested-imenu-index--item" function (:arguments ("def")) nil [35547 35657])
            ("jedi:create-nested-imenu-index" function nil nil [35659 35903])
            ("jedi:create-nested-imenu-index-1" function (:arguments ("items")) nil [35905 36326])
            ("jedi:create-flat-imenu-index" function nil nil [36328 36592])
            ("jedi:create-flat-imenu-index-1" function (:arguments ("items")) nil [36594 36876])
            ("jedi:show-setup-info" function (:user-visible-flag t) nil [36895 38710])
            ("jedi:-list-defcustoms" function nil nil [38712 39000])
            ("jedi:-list-customization" function nil nil [39002 39279])
            ("jedi:-virtualenv-version" function nil nil [39281 39549])
            ("jedi:get-jedi-version-request" function nil nil [39551 39718])
            ("jedi:show-version-info" function (:user-visible-flag t) nil [39720 40258])
            ("define-obsolete-function-alias" code nil nil [40260 40350])
            ("jedi:print-jedi-version" function nil nil [40352 40451])
            ("jedi:import-python-el-settings-setup" function nil nil [40466 41181])
            ("jedi:setup" function (:user-visible-flag t) nil [41198 42060])
            ("jedi:install-server--command" variable (:default-value (\` ("pip" "install" "--upgrade" (\, (convert-standard-filename jedi:source-dir))))) nil [42085 42200])
            ("jedi:install-server" function (:user-visible-flag t) nil [42217 44428])
            ("jedi:install-server-block" function nil nil [44445 44789])
            ("jedi:install-python-jedi-dev-command" variable (:default-value (quote ("pip" "install" "--upgrade" "git+https://github.com/davidhalter/jedi.git@dev#egg=jedi"))) nil [44791 45013])
            ("jedi:install-python-jedi-dev" function (:user-visible-flag t) nil [45015 45450])
            ("jedi:pop-to-epc-buffer" function (:user-visible-flag t) nil [45469 45723])
            ("jedi:toggle-log-traceback" function (:user-visible-flag t) nil [45725 46532])
            ("jedi:server-command--backup" variable nil nil [46534 46574])
            ("jedi:server-args--backup" variable nil nil [46575 46612])
            ("jedi:toggle-debug-server" function (:user-visible-flag t) nil [46614 48265])
            ("jedi" package nil nil [48268 48283]))          
      :file "jedi.el"
      :pointmax 48378
      :fsize 48377
      :lastmodtime '(21542 61213 571787 675000)
      :unmatched-syntax '((thing 993 . 994) (thing 960 . 977) (thing 959 . 960)))
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("ENV" variable (:default-value ("env")) nil [1 11])
            ("VIRTUALENV" variable (:default-value ("VIRTUALENV_SYSTEM_SITE_PACKAGES=$(VIRTUALENV_SYSTEM_SITE_PACKAGES)" "virtualenv" "--python=$(PYTHON)")) nil [52 169])
            ("PIP_INSTALL" variable (:default-value ("$(ENV)/$(BINDIR)/pip" "install")) nil [169 212])
            ("JEDI_DEV_URL" variable (:default-value ("https://github.com/davidhalter/jedi/archive/dev.zip")) nil [212 279])
            ("ELPA_DIR" variable (:default-value (".cask/$(shell ${EMACS} -Q --batch --eval '(princ emacs-version)')/elpa")) nil [348 433])
            ("VIRTUAL_EMACS" variable (:default-value ("${CASK}" "exec" "${EMACS}" "-Q" "--eval" "\"(setq python-environment--verbose t)\"" "--eval" "\"(setq jedi:environment-root \\\"$(PWD)/$(ENV)\\\")\"")) nil [455 602])
            (".PHONY" function (:arguments ("test" "test-1" "tryout" "clean-elpa" "requirements" "env" "clean-env" "clean" "print-deps" "travis-ci" "doc")) nil [603 703])
            ("TEST_DEPS" variable (:default-value ("elpa" "env")) nil [704 725])
            ("test" function (:arguments ("${TEST_DEPS}")) nil [725 760])
            ("test-1" function nil nil [761 856])
            ("compile" function (:arguments ("elpa" "clean-elc")) nil [857 942])
            ("clean-elc" function nil nil [943 968])
            ("tryout" function (:arguments ("compile" "env")) nil [969 1030])
            ("doc" function (:arguments ("elpa")) nil [1031 1059])
            ("ensure-git" function nil nil [1060 1141])
            ("elpa" function (:arguments ("${ELPA_DIR}")) nil [1142 1160])
            ("${ELPA_DIR}" function (:arguments ("Cask")) nil [1160 1217])
            ("clean-elpa" function nil nil [1219 1251])
            ("requirements" function nil nil [1252 1681])
            ("install-jedi-dev" function nil nil [1682 1742])
            ("env" function (:arguments ("$(ENV)/$(BINDIR)/jediepcserver")) nil [1743 1779])
            ("$(ENV)" function (:arguments ("${ELPA_DIR}" "jediepcserver.py" "setup.py")) nil [1779 1928])
            ("clean-env" function nil nil [1929 1955])
            ("clean-el" function (:arguments ("clean-elpa" "clean-elc")) nil [1956 1987])
            ("clean" function (:arguments ("clean-env" "clean-el")) nil [1987 2027])
            ("print-deps" function (:arguments ("elpa" "env")) nil [2028 2320])
            ("before-test" function (:arguments ("${TEST_DEPS}")) nil [2321 2361])
            ("travis-ci" function (:arguments ("print-deps" "test")) nil [2362 2432])
            ("JOBS" variable (:default-value ("$(addprefix job-,${EMACS_LIST})")) nil [2781 2821])
            (".PHONY" function (:arguments ("${JOBS}")) nil [2821 2837])
            ("${JOBS}" function (:arguments ("job-%:")) nil [2838 2929])
            ("test-all" function (:arguments ("env" "${JOBS}")) nil [2930 2952])
            ("PACKAGE" variable (:default-value ("jedi")) nil [3085 3100])
            ("VERSION" variable (:default-value ("$(shell grep ';; Version:' jedi.el | sed 's/^.* \\([0-9].*\\)$$/\\1/')")) nil [3100 3178])
            ("DIST_FILES" variable (:default-value ("jedi-pkg.el" "jedi.el" "jediepcserver.py" "Makefile" "tryout-jedi.el")) nil [3178 3255])
            (".PHONY" function (:arguments ("dist" "${PACKAGE}-${VERSION}.tar.gz" "${PACKAGE}-${VERSION}" "clean-dist" "clean-dist-all")) nil [3256 3349])
            ("dist" function (:arguments ("clean-dist")) nil [3350 3383])
            ("dist-1" function (:arguments ("dist/${PACKAGE}-${VERSION}.tar" "dist/${PACKAGE}-${VERSION}.tar.gz")) nil [3384 3457])
            ("dist/" function (:arguments ("${PACKAGE}-${VERSION}.tar")) nil [3458 3516])
            ("${PACKAGE}" function (:arguments ("${PACKAGE}-${VERSION}")) nil [3516 3603])
            ("dist/" function (:arguments ("${PACKAGE}-${VERSION}.tar.gz")) nil [3604 3668])
            ("${PACKAGE}" function (:arguments ("${PACKAGE}-${VERSION}")) nil [3668 3759])
            ("${PACKAGE}" function (:arguments ("dist/${PACKAGE}-${VERSION}")) nil [3760 3810])
            ("dist/" function nil nil [3810 3875])
            ("clean-dist" function nil nil [3876 3924])
            ("clean-dist-all" function nil nil [3925 3954])
            ("PACKAGE_USER_DIR" variable nil nil [3983 4002])
            ("TEST_PACKAGE_DIR" variable (:default-value ("dist/test")) nil [4002 4031])
            ("install-dist" function nil nil [4032 4426])
            ("test-install" function (:arguments ("dist/${PACKAGE}-${VERSION}.tar")) nil [4427 4589])
            ("test-install-requirement" function (:arguments ("test-install")) nil [4590 4709])
            ("MAKE_GH_PAGES" variable (:default-value ("$(MAKE)" "--directory" "doc" "--file" "gh-pages.mk")) nil [4726 4785])
            ("gh-pages-latest" function nil nil [4786 4821])
            ("gh-pages-released" function nil nil [4937 5080]))          
      :file "Makefile"
      :pointmax 5080
      :fsize 5079
      :lastmodtime '(21542 61213 567787 675000)
      :unmatched-syntax '((thing 2434 . 2434) (thing 343 . 346) (thing 341 . 342) (thing 340 . 341) (thing 333 . 339) (thing 333 . 333) (thing 326 . 331) (thing 324 . 325) (thing 323 . 324) (thing 317 . 322) (thing 310 . 316) (thing 310 . 310) (thing 305 . 309) (thing 303 . 304) (thing 302 . 303) (thing 297 . 301) (thing 297 . 297) (thing 290 . 296) (thing 288 . 289) (thing 287 . 288) (thing 280 . 286) (thing 280 . 280) (thing 47 . 51) (thing 45 . 46) (thing 44 . 45) (thing 12 . 43) (thing 12 . 12) (thing 2954 . 2954) (thing 3956 . 3956) (thing 4711 . 4711) (thing 5045 . 5045) (thing 5046 . 5079))))
  :file "!home!edgar!.emacs.d!el-get!jedi!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
